# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ShiftEntity {
  id: String!
  startsAt: DateTime!
  endsAt: DateTime!
  shiftTermId: String!
  members: [MemberEntity!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MemberEntity {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  meta: JSON!
  shifts: [ShiftEntity!]!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type CoopEventEntity {
  id: ID!
  sequenceId: Int!
  type: String!
  scopeType: String!
  scopeId: ID!
  happenedAt: DateTime!
  insertedAt: DateTime!
  data: JSON!
}

type AssignShiftCommandRespone {
  event: CoopEventEntity!
}

type Query {
  getShifts(to: DateTime!, from: DateTime!): [ShiftEntity!]!
  eventsByScopeType(scopeType: String!): [CoopEventEntity!]!
}

type Mutation {
  assignShift(assignShiftCommand: AssignShiftCommand!): AssignShiftCommandRespone!
}

input AssignShiftCommand {
  shiftId: String!
  memberId: String!
  actor: JSON!
}
